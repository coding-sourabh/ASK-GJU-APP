[{"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\index.js":"1","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\App.js":"2","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\context\\store.js":"3","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Quora.js":"4","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\auth\\Login.js":"5","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Widget.js":"6","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Feed.js":"7","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Sidebar.js":"8","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QHeader.js":"9","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QuorBox.js":"10","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Post.js":"11","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\WidgetContent.js":"12","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\SidebarOptions.js":"13"},{"size":320,"mtime":1629885415822,"results":"14","hashOfConfig":"15"},{"size":796,"mtime":1629995661098,"results":"16","hashOfConfig":"15"},{"size":1395,"mtime":1629995883786,"results":"17","hashOfConfig":"15"},{"size":426,"mtime":1630215724205,"results":"18","hashOfConfig":"15"},{"size":3681,"mtime":1629995491733,"results":"19","hashOfConfig":"15"},{"size":382,"mtime":1628506681355,"results":"20","hashOfConfig":"15"},{"size":1231,"mtime":1630221259693,"results":"21","hashOfConfig":"15"},{"size":242,"mtime":1628506681353,"results":"22","hashOfConfig":"15"},{"size":5473,"mtime":1630169173738,"results":"23","hashOfConfig":"15"},{"size":763,"mtime":1630155260290,"results":"24","hashOfConfig":"15"},{"size":7411,"mtime":1630221143293,"results":"25","hashOfConfig":"15"},{"size":2537,"mtime":1629995943091,"results":"26","hashOfConfig":"15"},{"size":2653,"mtime":1629995943217,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"q48cel",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\index.js",[],["56","57"],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\App.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\context\\store.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Quora.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\auth\\Login.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Widget.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Feed.js",["58"],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Sidebar.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QHeader.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\QuorBox.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\Post.js",["59","60","61","62","63","64"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./Post.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport avatar from \"../avatar.jpg\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport { AuthContext } from \"./context/store\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { logDOM } from \"@testing-library/react\";\r\n\r\nfunction Post({\r\n  questionUser,\r\n  question,\r\n  questionID,\r\n  imageUrl,\r\n  timestamp,\r\n  qID,\r\n  setQID,\r\n}) {\r\n  const context = useContext(AuthContext);\r\n  const currentUser = context.user;\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [getAnswers, setGetAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (questionID) {\r\n      axios\r\n        .post(\"http://localhost:8800/api/answer/fetchAnswer/\", {\r\n          questionID: questionID,\r\n        })\r\n        .then(function (response) {\r\n          // console.log(\r\n          //   \"successfully recieved all answer with ID \",\r\n          //   response.data\r\n          // );\r\n          setGetAnswers(response.data.allAnswer);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [questionID, getAnswers]);\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n    // Save answer\r\n    axios\r\n      .post(\"http://localhost:8800/api/answer/addAnswer/\", {\r\n        user: currentUser,\r\n        questionID: questionID,\r\n        answer: answer,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleOnPostClick = () => {\r\n    setQID(questionID);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\" onClick={handleOnPostClick}>\r\n      <div className=\"post__info\">\r\n        <img\r\n          className=\"avv\"\r\n          src={currentUser.photo ? currentUser.photo : avatar}\r\n        />\r\n        <h4>\r\n          {questionUser.username ? questionUser.username : questionUser.email}\r\n        </h4>\r\n        <h6 style={{ marginLeft: \"15px\", marginTop: \"3px\", color: \"grey\" }}>\r\n          {timestamp ? timestamp : \"28/8/2021 @ 17:36:23\"}\r\n        </h6>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__question\">\r\n          <p>{question}</p>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"post__btnAnswer\"\r\n          >\r\n            Answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                zIndex: \"1000\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                marginTop: \"-250px\",\r\n                marginLeft: \"-350px\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"modal__question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                  {questionUser.username\r\n                    ? questionUser.username\r\n                    : questionUser.email}\r\n                </span>{\" \"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {timestamp ? timestamp : \"28/8/2021 @ 17:36:23\"}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n\r\n        <img src={imageUrl} alt=\"\" />\r\n        {imageUrl ? (\r\n          <span>\r\n            <br />\r\n            <br />\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div\r\n          className=\"post__answer\"\r\n          style={{ position: \"relative\", paddingBottom: \"5px\" }}\r\n        >\r\n          {getAnswers.map((answers) => (\r\n            <span>\r\n              {qID === answers.questionID ? (\r\n                <span>\r\n                  {answers.answer}\r\n\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"grey\" }}>\r\n                      {answers.user.username\r\n                        ? answers.user.username\r\n                        : answers.user.email}{\" \"}\r\n                      on {answers.answerTime}\r\n                    </span>\r\n                  </span>\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"post__footer\">\r\n        <div className=\"post__footerAction\">\r\n          <ArrowUpwardOutlinedIcon />\r\n          <ArrowDownwardOutlinedIcon />\r\n        </div>\r\n\r\n        <RepeatOutlinedIcon />\r\n        <ChatBubbleOutlineOutlinedIcon />\r\n        <div className=\"post__footerLeft\">\r\n          <ShareOutlined />\r\n          <MoreHorizOutlined />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n\r\n{\r\n  /* <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n{Id === answers.questionId ? (\r\n  <span>\r\n    {answers.answer}\r\n    <br />\r\n    <span\r\n      style={{\r\n        position: \"absolute\",\r\n        color: \"gray\",\r\n        fontSize: \"small\",\r\n        display: \"flex\",\r\n        right: \"0px\",\r\n      }}\r\n    >\r\n      <span style={{ color: \"#b92b27\" }}>\r\n        {answers.user.displayName\r\n          ? answers.user.displayName\r\n          : answers.user.email}{\" \"}\r\n        on{\" \"}\r\n        {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n      </span>\r\n    </span>\r\n  </span>\r\n) : (\r\n  \"\"\r\n)}\r\n</p> */\r\n}\r\n\r\n{\r\n  /* <span>\r\n{answers.answer}\r\n\r\n<span\r\n  style={{\r\n    position: \"absolute\",\r\n    color: \"gray\",\r\n    fontSize: \"small\",\r\n    display: \"flex\",\r\n    right: \"0px\",\r\n  }}\r\n>\r\n  <span style={{ color: \"grey\" }}>\r\n    {answers.user.username\r\n      ? answers.user.username\r\n      : answers.user.email}{\" \"}\r\n    on {answers.answerTime}\r\n  </span>\r\n</span>\r\n<br />\r\n<br />\r\n</span> */\r\n}\r\n","C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\WidgetContent.js",[],"C:\\Users\\sourabh kumar\\Desktop\\sk askgju\\src\\components\\SidebarOptions.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":11,"column":9,"nodeType":"71","messageId":"72","endLine":11,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":14,"column":10,"nodeType":"71","messageId":"72","endLine":14,"endColumn":13},{"ruleId":"69","severity":1,"message":"75","line":15,"column":10,"nodeType":"71","messageId":"72","endLine":15,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":79,"column":9,"nodeType":"78","endLine":82,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":215,"column":1,"nodeType":"81","messageId":"82","endLine":243,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":245,"column":1,"nodeType":"81","messageId":"82","endLine":268,"endColumn":2},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'red' is defined but never used.","'logDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]